generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums

enum Role {
  USER
  ADMIN
}

enum Status {
  OPEN
  CLOSED
  IN_PROGRESS
  RESOLVED
  DUPLICATE
}

enum Priority {
  NONE
  LOW
  MEDIUM
  HIGH
}

// Models

model User {
  id              Int       @id @default(autoincrement())
  name            String?
  email           String    @unique
  role            Role      @default(USER)
  projects        Project[] @relation(name: "ManagedProjects")
  managedProjects Project[]
  reportedBugs    Bug[]     @relation(name: "Reporter")
  assignedBugs    Bug[]     @relation(name: "Assignee")
  createdAt       DateTime  @default(now())

  @@map("users")
}

model Bug {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  description String    @db.Text
  status      Status    @default(OPEN)
  reporter    User      @relation(name: "Reporter", fields: [reporterId], references: [id])
  reporterId  Int
  assignee    User?     @relation(name: "Assignee", fields: [assigneeId], references: [id])
  assigneeId  Int?
  projects    Project[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("bugs")
}

// TODO
model BugHistory {
  id Int @id
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  description String   @db.Text
  isArchived  Boolean  @default(false)
  manager     User     @relation(name: "ManagedProjects", fields: [managerId], references: [id])
  managerId   Int
  users       User[]
  bugs        Bug[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("projects")
}
